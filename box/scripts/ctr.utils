#!/system/bin/sh

ssid(){
	if connected; then
		local SSID
		SSID=$(dumpsys wifi | grep mWifiInfo | head -n 1 | cut -d "\"" -f 2)
		if [ -n "$(printf "%s" "${SSID}" | grep "<unknown ssid>")" ]; then
			printf "<unknown ssid>"
			return
		fi
		printf "%s" "${SSID}"
	else
		printf "%s" "<unknown ssid>"
		return 1
	fi
}

connected(){
	if [ -z "$(cat /data/misc/net/rt_tables | grep wlan)" ]; then
		return 1
	fi
}

status(){
	curl "127.0.0.1:9999/configs" &>/dev/null
	if ! [ $? = 0 ]; then
		return 1
	fi
	return
}

getPort(){
	printf "${clash_api_port}"
}

getSecret(){
	printf "${clash_api_secret}"
}

stop_core(){
	${scripts_dir}/box.tproxy disable >> ${run_path}/run.log 2>> ${run_path}/run_error.log
	${scripts_dir}/box.service stop >> ${run_path}/run.log 2>> ${run_path}/run_error.log
}

start_core(){
	${scripts_dir}/box.service start >> ${run_path}/run.log 2>> ${run_path}/run_error.log
	${scripts_dir}/box.tproxy enable >> ${run_path}/run.log 2>> ${run_path}/run_error.log
}

setOutbound(){
	if [ -z "$1" ]; then
		return 1
	fi
	if [ -z "$2" ]; then
		return 1
	fi
	local secret
	secret=$(getSecret)
	if [ -n "${secret}" ]; then
		curl -X PUT "127.0.0.1:$(getPort)/proxies/$1" -H "authorization: Bearer ${secret}" -H "Content-Type: application/json" -d '{"name": "'$2'"}'
		return
	fi
	curl -X PUT "127.0.0.1:$(getPort)/proxies/$1" -H "Content-Type: application/json" -d '{"name": "'$2'"}'
}

setMode(){
	if [ -z "$1" ]; then
		return 1
	fi
	local secret
	secret=$(getSecret)
	if [ -n "${secret}" ]; then
		curl -X PATCH "127.0.0.1:$(getPort)/configs" -H "authorization: Bearer $(getSecret)" -H "Content-Type: application/json" -d '{"mode": "'$1'"}'
		return
	fi
	curl -X PATCH "127.0.0.1:$(getPort)/configs" -H "Content-Type: application/json" -d '{"mode": "'$1'"}'
}

getTarget(){
	printf "%s" "$1" | tr ';' "\n" | awk -F ',' '/'"$2"'/{gsub(/.*'"$2"',/, "", $2); print $2}'
}

getKeyValue(){
	if [ -z "${1}" ]; then
		return
	fi
	local key="${1}"
	local str
	read -r line
	printf "$line" | grep -E -o '"'${key}'" *: *[0-9]*|"'${key}'" *: *"[^"]+"|"'${key}'" *: *true|"'${key}'" *: *false|"'${key}'" *: *null' | awk -F '(: ?)' '{gsub(/^"|"$/, "", $2); print $2}'
}

getNowOutbound(){
	secret=$(getSecret)
	if [ -n "${secret}" ]; then
		curl "127.0.0.1:$(getPort)/proxies/${select_outbound}" -H "authorization: Bearer ${secret}" -H "Content-Type: application/json" 2>/dev/null | getKeyValue now
	fi
	curl "127.0.0.1:$(getPort)/proxies/${select_outbound}" -H "Content-Type: application/json" 2>/dev/null | getKeyValue now
}

getNowMode(){
	secret=$(getSecret)
	if [ -n "${secret}" ]; then
		curl "127.0.0.1:$(getPort)/configs" -H "authorization: Bearer ${secret}" -H "Content-Type: application/json" 2>/dev/null | getKeyValue mode
	return
	fi
	curl "127.0.0.1:$(getPort)/configs" -H "Content-Type: application/json" 2>/dev/null | getKeyValue mode
}
